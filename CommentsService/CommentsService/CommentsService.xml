<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CommentsService</name>
    </assembly>
    <members>
        <member name="M:TheSocialBaz.Controllers.CommentingController.GetCommentsOpstions">
            <summary>
            Return implemented options for API   
            </summary>
            <returns>Header key 'Allow' with allowed requests</returns>
            <remarks>
            Example of successful request \
            OPTIONS 'https://localhost:49877/api/comments' \
            </remarks>
            <response code="200">Return header key 'Allow' with allowed requests</response>
        </member>
        <member name="M:TheSocialBaz.Controllers.CommentingController.GetAllComments(System.String)">
            <summary>
            Return all comments    
            </summary>
            <param name="key">Authorization header</param>
            <returns>List of all created comments</returns>
            <remarks>
            Example of successful request \
            GET 'https://localhost:49877/api/comments' \
                --header 'Authorization: Bearer YWRtaW46c3VwZXJBZG1pbjEyMw=='
            </remarks>
            <response code="200">Return list of comments</response>
            <response code="404">There is no comments</response>
            <response code="401">Authorization error</response>
        </member>
        <member name="M:TheSocialBaz.Controllers.CommentingController.GetCommentByID(System.String,System.Guid)">
            <summary>
            Return comment for provided comment ID    
            </summary>
            <returns>Comment with provided ID</returns>
            <remarks>
            Example of successful request \
            GET 'https://localhost:49877/api/comments/40b090d8-9e0f-470b-9e0e-2df13e05e935' \
                --header 'Authorization: Bearer YWRtaW46c3VwZXJBZG1pbjEyMw=='
            </remarks>
            <response code="200">Returns comment for provided ID</response>
            <response code="400">There is no comment with provided ID</response>
            <response code="401">Authorization error</response>
        </member>
        <member name="M:TheSocialBaz.Controllers.CommentingController.GetCommentsByPostID(System.String,System.Int32)">
            <summary>
            Return comments from the specified post 
            </summary>
            <returns>List of comments for the specified post</returns>
            <remarks>
            GET 'https://localhost:49877/api/comments/byPostID' \
                Example of successful request \
                    --header 'Authorization: Bearer YWRtaW46c3VwZXJBZG1pbjEyMw==' \
                    --param  'postID = 1' \
                Example of a failed request \
                    --header 'Authorization: Bearer YWRtaW46c3VwZXJBZG1pbjEyMw==' \
                    --param  'postID = 3' \
            </remarks>
            <param name="postID">Post ID</param>
            <param name="key">Authorization header</param>
            <response code="200">Return list of comments for given post</response>
            <response code="400">Post with provided ID does not exist</response>
            <response code="401">Authorization error</response>
            <response code="404">There is no comment with provided post ID</response>
        </member>
        <member name="M:TheSocialBaz.Controllers.CommentingController.GetCommentsByAccountID(System.String,System.Int32)">
            <summary>
            Return all coments that account posted 
            </summary>
            <returns>List of comments from the specified Account</returns>
            <remarks>
            GET 'https://localhost:49877/api/comments/byAccountID' \
                Example of successful request \
                    --header 'Authorization: Bearer YWRtaW46c3VwZXJBZG1pbjEyMw==' \
                    --param  'accountID = 2' \
                Example of a failed request \
                    --header 'Authorization: Bearer YWRtaW46c3VwZXJBZG1pbjEyMw==' \
                    --param  'accountID = 5'
            </remarks>
            <param name="accountID">Account ID</param>
            <param name="key">Authorization header</param>
            <response code="200">Return list of comments for given account</response>
            <response code="400">Account with provided ID does not exist</response>
            <response code="401">Authorization error</response>
            <response code="404">There is still no created comments with provided account ID</response>
        </member>
        <member name="M:TheSocialBaz.Controllers.CommentingController.CreateComment(System.String,TheSocialBaz.Model.CommentingCreateDto,System.Int32)">
            <summary>
            Creates new comment
            </summary>
            <param name="commentDto">Model of comment that is being added</param>
            <param name="accountID">Account ID that sends request</param>
            <param name="key">Authorization header</param>
            <returns></returns>
            <remarks>
            POST 'https://localhost:49877/api/comments/' \
            Example of successful request \
             --header 'Authorization: Bearer YWRtaW46c3VwZXJBZG1pbjEyMw==' \
             --param 'accountID = 2' \
             --body \
            {     \
                "postID": 1, \
                "content": "New comment" \
            } \
            </remarks>
            <response code="201">Return confirmation that new comment is created</response>
            <response code="400">Post with given ID does not exist</response>
            <response code="401">Authorization error</response>
            <response code="500">Server Error while saving comment</response>
        </member>
        <member name="M:TheSocialBaz.Controllers.CommentingController.UpdateComment(System.String,TheSocialBaz.Model.CommentingUpdateDto)">
            <summary>
            Update comment with provied ID
            </summary>
            <param name="newComment">Comment model that is going to be updated</param>
            <param name="key">Authorization header</param>
            <returns></returns>
            <remarks>
            PUT 'https://localhost:49877/api/comments' \
            Example of successful request    \
             --header 'Authorization: Bearer YWRtaW46c3VwZXJBZG1pbjEyMw=='  \
             --body \
            { \
                "commentID": "1cc45ba4-bbb9-41ad-b8fa-c768a4f14ca5", \
                "postID": 1, \
                "content": "Updated succ!" \
            } 
            </remarks>
            <response code="200">Return confirmation that comment is updated</response>
            <response code="401">Authorization error</response>
            <response code="404">Comment with provied ID not found</response>
            <response code="500">Server Error while updating comment</response>
        </member>
        <member name="M:TheSocialBaz.Controllers.CommentingController.DeleteComment(System.String,System.Guid)">
            <summary>
            Delete comment with provied ID
            </summary>
            <param name="commentID">Comment ID that is going to be removed</param>
            <param name="key">Authorization header</param>
            <remarks>        
            Example of successful request    \
            DELETE 'https://localhost:49877/api/comments' \
                --header 'Authorization: Bearer YWRtaW46c3VwZXJBZG1pbjEyMw==' \
                --param  'commentID = 40b090d8-9e0f-470b-9e0e-2df13e05e935'
            </remarks>
            <response code="200">Comment successfully deleted</response>
            <response code="401">Authorization error</response>
            <response code="404">Comment with provided ID does not exist</response>
            <response code="500">Server Error while deleting comment</response>
        </member>
        <member name="T:TheSocialBaz.Model.CommentingCreateDto">
            <summary>
            DTO for comment creation
            </summary>
        </member>
        <member name="P:TheSocialBaz.Model.CommentingCreateDto.PostID">
            <summary>
            Post ID to which the comment was added
            </summary>
        </member>
        <member name="P:TheSocialBaz.Model.CommentingCreateDto.CommentText">
            <summary>
            Comment content
            </summary>
        </member>
        <member name="T:TheSocialBaz.Model.CommentingDto">
            <summary>
            DTO comment model
            </summary>
        </member>
        <member name="P:TheSocialBaz.Model.CommentingDto.CommentID">
            <summary>
            Comment ID
            </summary>
        </member>
        <member name="P:TheSocialBaz.Model.CommentingDto.PostID">
            <summary>
            Post ID to which the comment refers
            </summary>
        </member>
        <member name="P:TheSocialBaz.Model.CommentingDto.AccountID">
            <summary>
            Account ID that posted comment
            </summary>
        </member>
        <member name="P:TheSocialBaz.Model.CommentingDto.Username">
            <summary>
            Account username that posted comment
            </summary>
        </member>
        <member name="P:TheSocialBaz.Model.CommentingDto.CommentText">
            <summary>
            Comment content
            </summary>
        </member>
        <member name="P:TheSocialBaz.Model.CommentingDto.CommentDate">
            <summary>
            Date when comment was posted
            </summary>
        </member>
        <member name="T:TheSocialBaz.Model.CommentingUpdateDto">
            <summary>
            DTO for comment modification
            </summary>
        </member>
        <member name="P:TheSocialBaz.Model.CommentingUpdateDto.CommentID">
            <summary>
            Comment ID
            </summary>
        </member>
        <member name="P:TheSocialBaz.Model.CommentingUpdateDto.PostID">
            <summary>
            Post ID to which the comment was added
            </summary>
        </member>
        <member name="P:TheSocialBaz.Model.CommentingUpdateDto.CommentText">
            <summary>
            Comment content
            </summary>
        </member>
        <member name="T:TheSocialBaz.Model.Enteties.Comment">
            <summary>
            Comments model
            </summary>
        </member>
        <member name="P:TheSocialBaz.Model.Enteties.Comment.CommentID">
            <summary>
            Comment ID
            </summary>
        </member>
        <member name="P:TheSocialBaz.Model.Enteties.Comment.PostID">
            <summary>
            Post ID to which the comment refers
            </summary>
        </member>
        <member name="P:TheSocialBaz.Model.Enteties.Comment.AccountID">
            <summary>
            Account ID that posted comment
            </summary>
        </member>
        <member name="P:TheSocialBaz.Model.Enteties.Comment.Account">
            <summary>
            Account username that posted comment
            </summary>
        </member>
        <member name="P:TheSocialBaz.Model.Enteties.Comment.CommentText">
            <summary>
            Comment content
            </summary>
        </member>
        <member name="P:TheSocialBaz.Model.Enteties.Comment.CommentDate">
            <summary>
            Date when comment was posted
            </summary>
        </member>
        <member name="T:TheSocialBaz.Model.Mock.PostDto">
            <summary>
            DTO Post model
            </summary>
        </member>
        <member name="P:TheSocialBaz.Model.Mock.PostDto.PostID">
            <summary>
            Post ID
            </summary>
        </member>
        <member name="P:TheSocialBaz.Model.Mock.PostDto.AccountID">
            <summary>
            Account ID
            </summary>
        </member>
        <member name="P:TheSocialBaz.Model.Mock.PostDto.PostName">
            <summary>
            Post name
            </summary>
        </member>
        <member name="P:TheSocialBaz.Model.Mock.PostDto.PostImage">
            <summary>
            Post picture
            </summary>
        </member>
        <member name="P:TheSocialBaz.Model.Mock.PostDto.Description">
            <summary>
            Post Description
            </summary>
        </member>
        <member name="P:TheSocialBaz.Model.Mock.PostDto.Price">
            <summary>
            Post price
            </summary>
        </member>
        <member name="P:TheSocialBaz.Model.Mock.PostDto.Currency">
            <summary>
            Post price currency
            </summary>
        </member>
        <member name="P:TheSocialBaz.Model.Mock.PostDto.Category">
            <summary>
            Post category
            </summary>
        </member>
        <member name="P:TheSocialBaz.Model.Mock.PostDto.PublicationDate">
            <summary>
            Post creation date
            </summary>
        </member>
        <member name="P:CommentsService.Model.Mock.AccountDto.AccountID">
            <summary>
            Account ID
            </summary>
        </member>
        <member name="P:CommentsService.Model.Mock.AccountDto.Username">
            <summary>
            Username
            </summary>
        </member>
        <member name="P:CommentsService.Model.Mock.AccountDto.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:CommentsService.Model.Mock.AccountDto.Surname">
            <summary>
            Surname
            </summary>
        </member>
        <member name="P:CommentsService.Model.Mock.AccountDto.Password">
            <summary>
            Password
            </summary>
        </member>
        <member name="P:CommentsService.Model.Mock.AccountDto.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="P:CommentsService.Model.Mock.AccountDto.Phone_number">
            <summary>
            Phone number
            </summary>
        </member>
        <member name="P:CommentsService.Model.Mock.AccountDto.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="P:CommentsService.Model.Mock.AccountDto.RoleID">
            <summary>
            Role ID
            </summary>
        </member>
    </members>
</doc>
