<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BlockingService</name>
    </assembly>
    <members>
        <member name="M:BlockingService.Controller.BlockingController.GetBlockingOptions">
            <summary>
            Return implemented options for API   
            </summary>
            <returns>Header key 'Allow' with allowed requests</returns>
            <remarks>
            Example of successful request \
            OPTIONS 'https://localhost:44304/api/block'
            </remarks>
            <response code="200">Return header key 'Allow' with allowed requests</response>
        </member>
        <member name="M:BlockingService.Controller.BlockingController.Authenticate(BlockingService.Models.DTOs.LoginDTO)">
            <summary>
            User login mock - generates JWT
            </summary>
            <param name="loginDTO">Model of account</param>
            <remarks>
            POST 'https://localhost:44304/api/block/login/' \
            Example of a successful request \
            {
            "username": "jovana",
            "password": "jovanaa"
             }
            </remarks>
            <response code="201">Returns generated JWT</response>
            <response code="400">Bad credidentials</response>
        </member>
        <member name="M:BlockingService.Controller.BlockingController.GetAll">
            <summary>
            Return all blocks   
            </summary>
            <returns>List of all blocking relations</returns>
            <remarks>
            Example of successful request \
            GET 'https://localhost:44304/api/block' \
            </remarks>
            <response code="200">Return list of blocked accounts by all users</response>
            <response code="404">There is no blocked accounts</response>
            <response code="401">Authorization error</response>
            <response code="500">Server error while reading</response>
        </member>
        <member name="M:BlockingService.Controller.BlockingController.GetAllBlockedAccounts(System.String)">
            <summary>
            Return all blocked accounts   
            </summary>
            <param name="key">Authorization header</param>
            <returns>List of all blocked accounts for user</returns>
            <remarks>
            Example of successful request \
            GET 'https://localhost:44304/api/block/blocked' \
                --header 'Authorization: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6ImpvdmFuYSIsIm5iZiI6MTYyODcxOTUzOCwiZXhwIjoxNjI4NzIzMTM4LCJpYXQiOjE2Mjg3MTk1Mzh9.327QAMSdiAmrOwQ-01Xk7kjXs4vOvbg86WbCLjFjtOk'
            </remarks>
            <response code="200">Return list of all blocked accounts for user</response>
            <response code="404">There is no blocked accounts</response>
            <response code="401">Authorization error</response>
            <response code="500">Server error while reading</response>
        </member>
        <member name="M:BlockingService.Controller.BlockingController.Block(System.String,BlockingService.Models.DTOs.BlockUserDTO)">
            <summary>
            Adds given user to accounts that current user blocks
            </summary>
            <param name="key">Authorization header</param>
            <param name="blockUserDTO">Model of account</param>
            <remarks>
            POST 'https://localhost:44304/api/block/blockUser/' \
            Example of a successful request \
             --header 'Authorization: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6ImpvdmFuYSIsIm5iZiI6MTYyODcxOTUzOCwiZXhwIjoxNjI4NzIzMTM4LCJpYXQiOjE2Mjg3MTk1Mzh9.327QAMSdiAmrOwQ-01Xk7kjXs4vOvbg86WbCLjFjtOk'
            {
            "Blocked": "andrijana",
             }
            </remarks>
            <response code="201">Returns the created blocking entity</response>
            <response code="400">Current user has already blocked given user</response>
            <response code="401">Unauthorized user</response>
            <response code="404">Given user account doesn't exist</response>
            <response code="500">There was an error on the server</response>
        </member>
        <member name="M:BlockingService.Controller.BlockingController.Unblock(System.String,BlockingService.Models.DTOs.BlockUserDTO)">
            <summary>
            Deletes given user from accounts that current user has blocked
            </summary>
            <param name="blockUserDTO">Model of account</param>
            <param name="key">Authorization header</param>
            <remarks>
            POST 'https://localhost:44304/api/block/unblockUser/' \
            Example of a successful request \
             --header 'Authorization: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1bmlxdWVfbmFtZSI6ImpvdmFuYSIsIm5iZiI6MTYyODcxOTUzOCwiZXhwIjoxNjI4NzIzMTM4LCJpYXQiOjE2Mjg3MTk1Mzh9.327QAMSdiAmrOwQ-01Xk7kjXs4vOvbg86WbCLjFjtOk'
            {
            "Blocked": "andrijana",
             }
            </remarks>
            <response code="201">Returns the deleted blocked entity</response>
            <response code="400">Current user hasn't blocked given user</response>
            <response code="401">Unauthorized user</response>
            <response code="404">Given user account doesn't exist</response>
            <response code="500">There was an error on the server</response>
        </member>
        <member name="P:BlockingService.Models.DTOs.BlockingDTO.BlockerId">
            <summary>
            Blocker ID
            </summary>
        </member>
        <member name="P:BlockingService.Models.DTOs.BlockingDTO.BlockedId">
            <summary>
            Blocked ID
            </summary>
        </member>
        <member name="P:BlockingService.Models.DTOs.BlockUserDTO.Blocked">
            <summary>
            Account Id of the user that will be blocked/unblocked
            </summary>
        </member>
        <member name="P:BlockingService.Models.DTOs.LoginDTO.Username">
            <summary>
            Username of the user account who is trying to login
            </summary>
        </member>
        <member name="P:BlockingService.Models.DTOs.LoginDTO.Password">
            <summary>
            Password of the user account who is trying to login
            </summary>
        </member>
        <member name="T:BlockingService.Models.Mocks.Account">
            <summary>
            Account DTO
            </summary>
        </member>
        <member name="P:BlockingService.Models.Mocks.Account.Account_id">
            <summary>
            Account ID
            </summary>
        </member>
        <member name="P:BlockingService.Models.Mocks.Account.Username">
            <summary>
            Username of the user account
            </summary>
        </member>
        <member name="P:BlockingService.Models.Mocks.Account.Name">
            <summary>
            Name of the user 
            </summary>
        </member>
        <member name="P:BlockingService.Models.Mocks.Account.Surname">
            <summary>
            Surname of the user
            </summary>
        </member>
        <member name="P:BlockingService.Models.Mocks.Account.Password">
            <summary>
            Password of the user account
            </summary>
        </member>
        <member name="P:BlockingService.Models.Mocks.Account.JWT">
            <summary>
            Generated JWT for authorization
            </summary>
        </member>
        <member name="T:BlockingService.Model.Entity.Blocking">
            <summary>
            Blocking model
            </summary>
        </member>
        <member name="P:BlockingService.Model.Entity.Blocking.BlockerId">
            <summary>
            Blocker ID
            </summary>
        </member>
        <member name="P:BlockingService.Model.Entity.Blocking.BlockedId">
            <summary>
            Blocked ID
            </summary>
        </member>
    </members>
</doc>
